1. Run the container image infracloudio/csvserver:latest in background and check if it's running? 

---> Used the command "docker run -d --name csvserver infracloudio/csvserver"

2. If it's failing then try to find the reason, once you find the reason, move to the next step?

---> Used the command "docker logs 4e5c97cbbf8fea". Found out that the file was missing for the container to run.

3. Write a bash script gencsv.sh to generate a file named inputFile whose content looks like

---> wrote the script called gencsv.sh . Available in solution folder.

4. Run the container again in the background with file generated in (3) available inside the container

---> mounted the file using bind mount functionality of docker with command "docker run -d -it --mount type=bind,source="$(pwd)"/inputFile,target=/csvserver/inputdata,readonly infracloudio/csvserver"

5. Get shell access to the container and find the port on which the application is listening. Once done, stop / delete the running container.

----> Used the command "docker exec -it 902de05c091e /bin/bash" to get the shell access. used the "netstat -tunlp" command for finding the port of application.The application was running on port 9300 and not in 9393 as per github repo.
        netstat -tunlp
        Active Internet connections (only servers)
        Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
        tcp6       0      0 :::9300                 :::*                    LISTEN      1/csvserver    

6. Same as (4), run the container and make sure, the application is accessible on the host at http://localhost:9393. Set the environment variable CSVSERVER_BORDER to have value Orange

---> The application was running on port 9300 so used the command "docker run -d -it -p 9393:9300 -e CSVSERVER_BORDER=Orange --mount type=bind,source="$(pwd)"/inputFile,target=/csvserver/inputdata,readonly infracloudio/csvserver 


